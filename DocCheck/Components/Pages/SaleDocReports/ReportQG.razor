@page "/report-qg"

@using DocCheck.Application
@using DocCheck.Common
@using DocCheck.Data
@using DocCheck.Domain
@using Microsoft.AspNetCore.Components.QuickGrid

@inject ISaleDocReportService ReportService

<h3>Report</h3>

<EditForm Model="ReportParamsModel" OnSubmit="BuildReport" FormName="ReportParamsForm">
	<div class="row">
		<div class="col">
			<div class="input-group mb-3">
				<span class="input-group-text">Период с:</span>
				<InputDate class="form-control" @bind-Value="ReportParamsModel!.DateBegin" />
				<span class="input-group-text">по:</span>
				<InputDate class="form-control" @bind-Value="ReportParamsModel!.DateEnd" />
			</div>
		</div>
		<div class="col">
			<InputSelect class="form-select" @bind-Value="ReportParamsModel!.PositionId">
				<option value="">
					Выберите ...
				</option>
				@foreach (var position in positions)
				{
					<option value="@position.Id">@position.Description</option>
				}
			</InputSelect>
		</div>
		<div class="col-auto">
			<button class="btn btn-primary" type="submit">Сформировать</button>
		</div>
		<div class="col-auto">
			<button class="btn btn-primary" type="button" @onclick="ClearReportParams">Очистить</button>
		</div>
	</div>
</EditForm>

<div class="grid" tabindex="-1">
	<QuickGrid ItemsProvider="itemsProvider" Virtualize="true" @ref="grid" Class="table table-hover table-striped">
		<PropertyColumn Property="@(c => c.Position.Description)" Sortable="false" Title="Этап" />
		<PropertyColumn Property="@(c => c.Date)" Format="dd.MM.yyyy" Sortable="true" Title="Дата" />
		<PropertyColumn Property="@(c => c.Number)" Sortable="true" Title="Номер" />
		<PropertyColumn Property="@(c => c.IsIncorrect)" Sortable="true" Title="Корректен" />
		<TemplateColumn Context="context" Title="Ошибки">
			<HeaderTemplate>
				<table>
					<tr>
						<td colspan="2">Ячейка 2</td>
					</tr>
					<tr>
						<th scope="col" class="vertical-header">Ячейка 4</th>
						<th scope="col" class="vertical-header">Ячейка 5</th>
					</tr>
				</table>
			</HeaderTemplate>
			<ChildContent>
				<span>@context.HasQuantityErrors</span>
			</ChildContent>
		</TemplateColumn>
	</QuickGrid>
</div>

@code {
	[SupplyParameterFromForm]
	private ReportParams ReportParamsModel { get; set; } = new();

	private Position[] positions = Position.GetAll();

	private QuickGrid<SaleDoc>? grid;
	private GridItemsProvider<SaleDoc>? itemsProvider;
	int numResults;


	protected override void OnInitialized()
	{
		itemsProvider = async gridRequest =>
		{
			var reportResult = await ReportService.BuildReport(gridRequest, ReportParamsModel);

			if (reportResult.TotalItemCount != numResults && !gridRequest.CancellationToken.IsCancellationRequested)
			{
				numResults = reportResult.TotalItemCount;

				StateHasChanged();
			}

			return reportResult;
		};
	}

	private async Task BuildReport(EditContext args)
	{
		if (grid is not null)
			await grid.RefreshDataAsync();
	}

	private async Task ClearReportParams(MouseEventArgs args)
	{
		ReportParamsModel = new();

		if (grid is not null)
			await grid.RefreshDataAsync();
	}
}
